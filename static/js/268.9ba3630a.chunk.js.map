{"version":3,"file":"static/js/268.9ba3630a.chunk.js","mappings":"4OAGaA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBA,OACE,kBAAMC,SAbe,SAAAC,GAGrB,GAFAA,EAAIC,kBAECJ,EACH,OAAOK,IAAAA,OAAAA,KAAqB,4BAG9BP,EAASE,GAETC,EAAS,GACV,EAGC,WACE,kBAAOK,KAAK,OAAOC,YAAY,6BAA6BT,SAlB3C,SAAAK,GACnBF,EAASE,EAAIK,OAAOC,MACrB,KAiBG,mBAAQH,KAAK,SAAb,sBAGL,E,kBCWD,EAhCe,WAAO,IAAD,EACnB,GAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4Bb,EAAAA,EAAAA,UAAS,IAArC,eAAOc,EAAP,KAAeC,EAAf,KACMC,EAAW,UAAGJ,EAAaK,IAAI,iBAApB,QAAiC,GAqBlD,OAfAC,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GACJ,GAAqC,IAAjCA,EAASC,KAAKC,QAAQC,OACxB,OAAOlB,IAAAA,OAAAA,QAAwB,+CAGjCS,EAAUM,EAASC,KAAKC,QACzB,IACAE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,CAACb,KAGF,4BACE,SAAClB,EAAD,CAAWC,SArBK,SAAA+B,GAClBjB,EAA8B,KAAdiB,EAAmB,CAAEC,OAAQD,GAAc,CAAC,EAC7D,IAoBIhB,EAAOU,OAAS,IAAK,SAACQ,EAAA,EAAD,CAAYlB,OAAQA,MAG/C,C","sources":["components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { useState } from 'react';\n\nexport const SearchBox = ({ onChange }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const onHandleSubmit = evt => {\n    evt.preventDefault();\n\n    if (!query) {\n      return Notiflix.Notify.info('Please enter a film name');\n    }\n\n    onChange(query);\n\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={onHandleSubmit}>\n      <input type=\"text\" placeholder=\"enter movie name to search\" onChange={handleChange} />\n      <button type=\"submit\">search</button>\n    </form>\n  );\n};\n","import Notiflix from 'notiflix';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { serchMoviesByName } from 'service/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const searchValue = searchParams.get('filter') ?? '';\n\n  const searchMovie = movieName => {\n    setSearchParams(movieName !== '' ? { filter: movieName } : {});\n  };\n\n  useEffect(() => {\n    if (!searchValue) {\n      return;\n    }\n    serchMoviesByName(searchValue)\n      .then(responce => {\n        if (responce.data.results.length === 0) {\n          return Notiflix.Notify.warning('Sorry, we have found any films... Try again');\n        }\n\n        setMovies(responce.data.results);\n      })\n      .catch(error => console.log(error.message));\n  }, [searchValue]);\n\n  return (\n    <div>\n      <SearchBox onChange={searchMovie} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchBox","onChange","useState","query","setQuery","onSubmit","evt","preventDefault","Notiflix","type","placeholder","target","value","useSearchParams","searchParams","setSearchParams","movies","setMovies","searchValue","get","useEffect","serchMoviesByName","then","responce","data","results","length","catch","error","console","log","message","movieName","filter","MoviesList"],"sourceRoot":""}