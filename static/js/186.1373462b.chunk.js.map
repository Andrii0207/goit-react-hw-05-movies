{"version":3,"file":"static/js/186.1373462b.chunk.js","mappings":"8LAoCA,UAhCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAWM,EAAKC,KAAKC,QAAzB,GACnC,GAAE,CAACP,IAECF,GAKH,yBACGA,EAAQU,OACPV,EAAQW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EAKZ,KAED,0BACE,mEAhBC,IAqBV,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'service/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(resp => setReviews(resp.data.results));\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <div>\n      {reviews.length ? (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <p>{author}</p>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <div>\n          <p>There are no reviews for this movie</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","resp","data","results","length","map","id","author","content"],"sourceRoot":""}