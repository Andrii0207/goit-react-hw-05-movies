{"version":3,"file":"static/js/33.f580e351.chunk.js","mappings":"oRAGaA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uPAgBPE,EAAaF,EAAAA,GAAAA,IAAH,6DAKVG,EAAkBH,EAAAA,GAAAA,IAAH,kEAKfI,EAAWJ,EAAAA,GAAAA,GAAH,4GAORK,EAAcL,EAAAA,GAAAA,EAAH,qFAMXM,EAAeN,EAAAA,GAAAA,IAAH,2GAOZO,EAAeP,EAAAA,GAAAA,EAAH,sFAMZQ,EAAaR,EAAAA,GAAAA,GAAH,iEAIVS,EAAiBT,EAAAA,GAAAA,EAAH,iEAKdU,EAAUV,EAAAA,GAAAA,IAAH,yFAMPW,GAAWX,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yIAWRY,GAAaZ,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sH,SCEvB,EAhEqB,WAAO,IAAD,QACjBa,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAU,oBAAGL,EAASM,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACrCC,GAAcC,EAAAA,EAAAA,QAAM,UAACT,EAASM,aAAV,aAAC,EAAgBN,UAQ3C,IANAU,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBC,OAAOd,IACxBe,MAAK,SAAAV,GAAK,OAAIC,EAASD,EAAMW,KAAnB,IACVC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,CAACrB,IAECK,EAAL,CAIA,IAAQiB,EAA6DjB,EAA7DiB,YAAaC,EAAgDlB,EAAhDkB,aAAcC,EAAkCnB,EAAlCmB,MAAOC,EAA2BpB,EAA3BoB,KAAMC,EAAqBrB,EAArBqB,SAAUC,EAAWtB,EAAXsB,OAG1D,OACE,4BACE,SAACzC,EAAD,CAAS0C,GAAE,UAAElB,EAAYmB,eAAd,QAAyBtB,EAApC,sBACA,UAAClB,EAAD,YACE,0BACE,gBACEyC,IAAKR,EAAc,UARL,mCAQ4BA,EAAcS,EACxDC,IAAKR,GAASC,EACdQ,MAAM,aAGV,UAAC3C,EAAD,YACE,SAACC,EAAD,UAAWiC,KACX,UAAChC,EAAD,eAAe+B,EAAeA,EAAaW,MAAM,EAAG,GAAKX,EAAzD,QACA,SAAC9B,EAAD,wBACA,SAACC,EAAD,UAAegC,KACf,SAAC/B,EAAD,sBACA,SAACC,EAAD,UACG+B,GAAUA,EAAOQ,OAAS,EACvBR,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMZ,IAAV,IAAgBa,KAAK,MACrC,+BAKV,4BACE,SAACzC,EAAD,sCACA,SAACC,EAAD,CAAU8B,GAAG,OAAOpB,MAAO,CAAEC,KAAMF,GAAnC,mBAIA,SAACR,EAAD,CAAY6B,GAAG,UAAUpB,MAAO,CAAEC,KAAMF,GAAxC,yBAIF,SAAC,EAAAgC,SAAD,CAAUC,UAAU,yCAApB,UACE,SAAC,KAAD,QAzCL,CA6CF,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const NavLink = styled(Link)`\n  font-size: 25px;\n  text-decoration: none;\n\n  border-radius: 5px;\n  border: 1px solid black;\n  color: black;\n\n  :hover,\n  :focus {\n    background: orangered;\n    color: white;\n    border: 1px solid black;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  display: flex;\n  margin: 40px 0;\n`;\n\nexport const FilmNameWrapper = styled.div`\n  font-size: 20px;\n  margin-left: 50px;\n`;\n\nexport const FilmName = styled.h1`\n  font-size: 25px;\n  font-weight: 700;\n  display: inline;\n  margin-right: 10px;\n`;\n\nexport const FilmRelease = styled.p`\n  font-size: 25px;\n  font-weight: 700;\n  display: inline;\n`;\n\nexport const OverviewName = styled.div`\n  max-width: 350px;\n  font-size: 25px;\n  font-weight: 700;\n  margin-top: 30px;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n  max-width: 700px;\n`;\n\nexport const GenresName = styled.h2`\n  font-size: 25px;\n  font-weight: 700;\n`;\nexport const OverviewGenres = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n`;\n\nexport const AddInfo = styled.div`\n  font-size: 25px;\n  font-weight: 500;\n  margin-bottom: 15px;\n`;\n\nexport const CastInfo = styled(Link)`\n  font-size: 20px;\n  font-weight: 500;\n  display: block;\n\n  :hover,\n  :focus {\n    color: orangered;\n  }\n`;\n\nexport const ReviewInfo = styled(Link)`\n  font-size: 20px;\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    color: orangered;\n  }\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense, useRef } from 'react';\nimport { getMovieDetailsById } from 'service/api';\nimport defaultImage from '../../service/default.png';\nimport {\n  ImgWrapper,\n  FilmNameWrapper,\n  FilmName,\n  FilmRelease,\n  OverviewName,\n  OverviewText,\n  GenresName,\n  OverviewGenres,\n  NavLink,\n  AddInfo,\n  CastInfo,\n  ReviewInfo,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const [movie, setMovie] = useState({});\n\n  const goBackLink = location.state?.from ?? '/movies';\n  const refLocation = useRef(location.state?.location);\n\n  useEffect(() => {\n    getMovieDetailsById(Number(movieId))\n      .then(movie => setMovie(movie.data))\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const { poster_path, release_date, title, name, overview, genres } = movie;\n  const base_poster_url = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <div>\n      <NavLink to={refLocation.current ?? goBackLink}>Go back</NavLink>\n      <ImgWrapper>\n        <div>\n          <img\n            src={poster_path ? `${base_poster_url}` + poster_path : defaultImage}\n            alt={title || name}\n            width=\"250px\"\n          />\n        </div>\n        <FilmNameWrapper>\n          <FilmName>{title}</FilmName>\n          <FilmRelease>({release_date ? release_date.slice(0, 4) : release_date})</FilmRelease>\n          <OverviewName>Overview</OverviewName>\n          <OverviewText>{overview}</OverviewText>\n          <GenresName>Genres</GenresName>\n          <OverviewGenres>\n            {genres && genres.length > 0\n              ? genres.map(genre => genre.name).join(', ')\n              : 'There are no genres'}\n          </OverviewGenres>\n        </FilmNameWrapper>\n      </ImgWrapper>\n\n      <div>\n        <AddInfo>Additional information</AddInfo>\n        <CastInfo to=\"cast\" state={{ from: goBackLink }}>\n          Cast\n        </CastInfo>\n\n        <ReviewInfo to=\"reviews\" state={{ from: goBackLink }}>\n          Reviews\n        </ReviewInfo>\n      </div>\n      <Suspense fallback={<div>Loading ...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["NavLink","styled","Link","ImgWrapper","FilmNameWrapper","FilmName","FilmRelease","OverviewName","OverviewText","GenresName","OverviewGenres","AddInfo","CastInfo","ReviewInfo","movieId","useParams","location","useLocation","useState","movie","setMovie","goBackLink","state","from","refLocation","useRef","useEffect","getMovieDetailsById","Number","then","data","catch","error","console","log","message","poster_path","release_date","title","name","overview","genres","to","current","src","defaultImage","alt","width","slice","length","map","genre","join","Suspense","fallback"],"sourceRoot":""}